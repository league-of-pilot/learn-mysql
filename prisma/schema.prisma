// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// https://www.prisma.io/docs/orm/reference/prisma-schema-reference#attributes
// https://www.prisma.io/docs/orm/reference/prisma-schema-reference#-modifier-1

// @@unique([]) là unique constraint, khác unique của mỗi field

model Post {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String
  published Boolean? @default(false)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now()) @map("created_at")
  // prisma studio will still show createdAt
  // only when access db will use created_at
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String

  // Hiện ko thể 1 post nhiều user được mà phải có 1 bảng trung gian ?
  Collaborator Collaborator[]
}

// https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/one-to-one-relations
model User {
  id             String         @id @default(cuid())
  email          String
  hashedPassword String
  posts          Post[]
  Collaborator   Collaborator[]
  userDisplayId  String
  UserDisplay    UserDisplay?
  AliasNick      AliasNick[]
  aliasNickId    String?
}

// many - to - many
// mention cũng similar, phải tạo 1 table trung gian, ko giống noSQL
model Collaborator {
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@id([postId, userId])
}

// many-to-many
// demo 1 user many nick, 1 nick could be choose by many user
// for learning syntax only
model AliasNick {
  id       String @id @default(cuid())
  nickName String
  user     User[]
}

// 1-1 relation
model UserDisplay {
  id          String @id @default(cuid())
  displayName String
  user        User   @relation(fields: [userId], references: [id])
  userId      String @unique
}
